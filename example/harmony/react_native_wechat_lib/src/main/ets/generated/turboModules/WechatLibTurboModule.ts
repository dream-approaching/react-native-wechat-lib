/**
 * This code was generated by "react-native codegen-lib-harmony"
 */

import { Tag } from "@rnoh/react-native-openharmony/ts"

export namespace WechatLibTurboModule {
  export const NAME = 'WechatLibTurboModule' as const

  export enum WXScene {
    WXSceneSession = 0,
    WXSceneTimeline = 1,
    WXSceneFavorite = 2,
    WXSceneSpecifiedSession = 3,
  }

  export type IScanRes = {authCode: null | string, errCode: null | string}
  
  export type ShareTextMetadata = {text: string, scene?: WXScene}
  
  export type ShareImageMetadata = {imageUrl: string, scene?: WXScene}
  
  export type ShareFileMetadata = {url: string, title?: string, ext?: string, scene?: WXScene}
  
  export type ShareMusicMetadata = {musicUrl: string, musicLowBandUrl?: string, musicDataUrl?: string, musicLowBandDataUrl?: string, title?: string, description?: string, thumbImageUrl?: string, scene?: WXScene}
  
  export type ShareVideoMetadata = {videoUrl: string, videoLowBandUrl?: string, title?: string, description?: string, thumbImageUrl?: string, scene?: WXScene}
  
  export type ShareWebpageMetadata = {webpageUrl: string, title?: string, description?: string, thumbImageUrl?: string, scene?: WXScene}
  
  export type ShareMiniProgramMetadata = {webpageUrl: string, userName: string, path?: string, hdImageUrl?: string, withShareTicket?: string, miniProgramType?: number, title?: string, description?: string, thumbImageUrl?: string, scene?: WXScene}
  
  export type LaunchMiniProgramMetadata = {userName: string, miniProgramType?: number, path?: string}
  
  export type ChooseInvoice = {signType?: string, nonceStr?: string, timeStamp?: number, cardSign?: string}
  
  export type Invoice = {appId: string, cardId: string, encryptCode: string}
  
  export type IChooseInvoiceRes = {errCode?: number, errStr?: string, cards: Invoice[]}
  
  export type PaymentLoad = {partnerId: string, prepayId: string, nonceStr: string, timeStamp: string, package: string, sign: string, extData: string}
  
  export type SubscribeMessageMetadata = {scene?: WXScene, templateId: string, reserved?: string}
  
  export interface Spec {
    registerApp(appId: string, universalLink: string): Promise<boolean>;
  
    isWXAppInstalled(): Promise<boolean>;
  
    isWXAppSupportApi(): Promise<boolean>;
  
    getApiVersion(): Promise<string>;
  
    openWXApp(): Promise<boolean>;
  
    sendAuthRequest(scope: string, state: string): Promise<boolean>;
  
    authByScan(appId: string, nonceStr: string, timeStamp: string, scope: string, signature: string, schemeData: string): Promise<IScanRes>;
  
    shareText(message: ShareTextMetadata): Promise<boolean>;
  
    shareImage(message: ShareImageMetadata): Promise<boolean>;
  
    shareLocalImage(message: ShareImageMetadata): Promise<boolean>;
  
    shareFile(message: ShareFileMetadata): Promise<boolean>;
  
    shareMusic(message: ShareMusicMetadata): Promise<boolean>;
  
    shareVideo(message: ShareVideoMetadata): Promise<boolean>;
  
    shareWebpage(message: ShareWebpageMetadata): Promise<boolean>;
  
    shareMiniProgram(message: ShareMiniProgramMetadata): Promise<boolean>;
  
    launchMiniProgram(message: LaunchMiniProgramMetadata): Promise<boolean>;
  
    chooseInvoice(data: ChooseInvoice): Promise<IChooseInvoiceRes>;
  
    pay(payload: PaymentLoad, callback: (result: null | Object) => void): Promise<boolean>;
  
    subscribeMessage(message: SubscribeMessageMetadata): Promise<boolean>;
  
    getNativeEventEmitter(): Object;
  
  }
}
